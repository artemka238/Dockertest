version: "3.9"
services:
  web:
    # Берем Dockerfile из каталога app
    build: 
      context: ./app
      dockerfile: Dockerfile.prod
    # Запускаем сервер gunicorn
    command: gunicorn django_project.wsgi:application --bind 0.0.0.0:8000
    # Открываем порт 8000 внутри и снаружи
    expose:
      - 8000
      # Подключаем статические и медиа файлы
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    env_file:
      - ./.env.prod
    # Дожидаемся запуска контейнера db
    depends_on:
      - db
  db:
  # environment:
  # POSTGRES_USER: dante
  # POSTGRES_PASSWORD: dante123456
  # POSTGRES_DB: library
    # Образ и версия базы, которую мы будем использовать
    image: postgres:12.0-alpine
    # Внешний том(volume) и место где он будет подключен внутри контейнера
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
  nginx:
    build: ./nginx
    # Подключаем статические и медиа файлы
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    
    ports:
      - 1337:80
    depends_on:
      - web
  # my-app:
  #   container_name: my-app
  #   build:
  #     context: ./vue_app
  #     dockerfile: Dockerfile
  #   command: npm run serve
  #   ports:
  #     - '8081:8080'
  #   depends_on:
  #     - web

volumes:
  postgres_volume:
  static_volume:
  media_volume:



  